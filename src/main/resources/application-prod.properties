# Description how to deploy to aws https://www.callicoder.com/deploy-host-spring-boot-apps-on-aws-using-elastic-beanstalk/
# Description how to connect pgAdmin to remote db https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_ConnectToPostgreSQLInstance.html

# Listen on the port passed through `PORT` environment variable (Fallback to 8080)
server.port=${PORT:8080}
spring.datasource.url=jdbc:postgresql://${rds.hostname}:${rds.port}/${rds.db.name}
spring.datasource.username=${rds.username}
spring.datasource.password=${rds.password}
spring.datasource.initialization-mode=always
spring.datasource.initialize=true

#if you want ot upload test data create data.sql. if below is uncommented then data.sql will be executed
#spring.datasource.schema=classpath:/schema.sql
spring.datasource.continue-on-error=true

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update

spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

